{"version":3,"sources":["index.js"],"names":["Card","className","this","props","handleDeleteButton","type","onClick","book","isbn","aria-hidden","alt","src","imgURL","title","author","React","Component","CardDeck","Object","entries","data","map","key","value","DeleteBookModal","show","selectedBook","onHide","handleDeleteModalClick","Header","closeButton","Title","Body","Footer","variant","e","FormRow","htmlFor","id","label","placeholder","AddBookModal","evt","stopPropagation","preventDefault","f","files","dataTransfer","i","match","reader","FileReader","onload","theFile","span","document","createElement","innerHTML","target","result","escape","name","join","dropZone","getElementById","insertBefore","readAsDataURL","dropEffect","showAddModal","handleAddButton","action","method","onDragOver","handleDragOver","onDrop","handleFileSelect","App","bind","state","fetch","then","resp","json","dataDict","reduce","dict","item","setState","otherBooks","mode","thumbnail","querySelector","read","numPages","ReactDOM","render"],"mappings":"4TAOMA,E,iLACM,IAAD,OACP,OACE,yBAAKC,UAAU,eAEXC,KAAKC,MAAMC,oBACX,yBAAKH,UAAU,eACb,4BAAQI,KAAK,SAASJ,UAAU,QAAQK,QAAS,kBAAM,EAAKH,MAAMC,mBAAmB,EAAKD,MAAMI,KAAKC,QACnG,0BAAMC,cAAY,QAAlB,UAKN,yBAAKR,UAAU,gBACb,yBAAKA,UAAU,eAAeS,IAAI,GAAGC,IAAKT,KAAKC,MAAMI,KAAKK,UAE5D,yBAAKX,UAAU,aACb,wBAAIA,UAAU,cAAcC,KAAKC,MAAMI,KAAKM,OAC5C,uBAAGZ,UAAU,aAAaC,KAAKC,MAAMI,KAAKO,QAC1C,uBAAGb,UAAU,aAAb,SAAgCC,KAAKC,MAAMI,KAAKC,Y,GAnBvCO,IAAMC,WA2BnBC,E,iLAEM,IAAD,OACP,OACE,yBAAKhB,UAAU,aACXiB,OAAOC,QAAQjB,KAAKC,MAAMiB,MAAMC,KAAK,mCAAEC,EAAF,KAAOC,EAAP,YACvC,kBAACvB,EAAD,CAAMsB,IAAKA,EAAKf,KAAMgB,EAAOnB,mBAAoB,EAAKD,MAAMC,6B,GAN7CW,IAAMC,WAgBvBQ,E,iLAEM,IAAD,OACP,OACE,kBAAC,IAAD,CAAOC,KAA+B,MAAzBvB,KAAKC,MAAMuB,aAAoBC,OAAQzB,KAAKC,MAAMyB,wBAC7D,kBAAC,IAAMC,OAAP,CAAcC,aAAW,GACvB,kBAAC,IAAMC,MAAP,iCAEF,kBAAC,IAAMC,KAAP,KACE,kBAAChC,EAAD,CAAMO,KAAML,KAAKC,MAAMuB,gBAEzB,kBAAC,IAAMO,OAAP,KACE,kBAAC,IAAD,CAAQC,QAAQ,YAAY5B,QAASJ,KAAKC,MAAMyB,wBAAhD,SAGA,kBAAC,IAAD,CAAQM,QAAQ,UAAU5B,QAAS,SAAA6B,GAAC,OAAI,EAAKhC,MAAMyB,uBAAuBO,EAAG,EAAKhC,MAAMuB,aAAalB,QAArG,gB,GAfoBO,IAAMC,WAwB9BoB,E,iLAEF,OACE,yBAAKnC,UAAU,kBACb,2BAAOoC,QAASnC,KAAKC,MAAMmC,GAAKrC,UAAU,2BAA2BC,KAAKC,MAAMoC,MAAhF,KACA,yBAAKtC,UAAU,aACb,2BAAOI,KAAK,OAAOJ,UAAU,eAAeqC,GAAIpC,KAAKC,MAAMmC,GAAIE,YAAatC,KAAKC,MAAMoC,c,GAN3ExB,IAAMC,WAatByB,E,yLACaC,GACfA,EAAIC,kBACJD,EAAIE,iBAIJ,IAFA,IAEgBC,EAFZC,EAAQJ,EAAIK,aAAaD,MAEpBE,EAAI,EAAMH,EAAIC,EAAME,GAAIA,IAC7B,GAAKH,EAAExC,KAAK4C,MAAM,WAAlB,CAGA,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,OAAU,SAAUC,GACvB,OAAO,SAAUlB,GACb,IAAImB,EAAOC,SAASC,cAAc,QAClCF,EAAKG,UAAY,CAAC,2BAA4BtB,EAAEuB,OAAOC,OACnD,YAAaC,OAAOP,EAAQQ,MAAO,OAAOC,KAAK,IACnD,IAAIC,EAAWR,SAASS,eAAe,aACvCD,EAASN,UAAY,GACrBM,EAASE,aAAaX,EAAM,OAPnB,CASdT,GACHK,EAAOgB,cAAcrB,M,qCAIZH,GACbA,EAAIC,kBACJD,EAAIE,iBACJF,EAAIK,aAAaoB,WAAa,S,+BAGtB,IAAD,OACP,OACE,kBAAC,IAAD,CAAO1C,KAAMvB,KAAKC,MAAMiE,aAAczC,OAAQzB,KAAKC,MAAMkE,iBACvD,kBAAC,IAAMxC,OAAP,CAAcC,aAAW,GACvB,kBAAC,IAAMC,MAAP,sBAEF,kBAAC,IAAMC,KAAP,KACI,0BAAMM,GAAG,YAAYgC,OAAO,GAAGC,OAAO,QACpC,kBAACnC,EAAD,CAASE,GAAI,gBAAiBC,MAAM,UACpC,kBAACH,EAAD,CAASE,GAAI,iBAAkBC,MAAM,WACrC,kBAACH,EAAD,CAASE,GAAI,eAAgBC,MAAM,SACnC,yBAAKD,GAAG,YAAYkC,WAAYtE,KAAKuE,eAAgBC,OAAQxE,KAAKyE,kBAAlE,0BAGN,kBAAC,IAAM1C,OAAP,KACE,kBAAC,IAAD,CAAQC,QAAQ,YAAY5B,QAASJ,KAAKC,MAAMkE,iBAAhD,SAGA,kBAAC,IAAD,CAAQnC,QAAQ,UAAU5B,QAAS,SAAA6B,GAAC,OAAI,EAAKhC,MAAMkE,gBAAgBlC,EAAE,SAArE,kB,GAlDiBpB,IAAMC,WA2D3B4D,E,YACJ,WAAYzE,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,mBAAqB,EAAKA,mBAAmByE,KAAxB,gBAC1B,EAAKjD,uBAAyB,EAAKA,uBAAuBiD,KAA5B,gBAC9B,EAAKR,gBAAkB,EAAKA,gBAAgBQ,KAArB,gBACvB,EAAKC,MAAQ,CACT1D,KAAM,GACNM,aAAc,KACd0C,cAAc,GARD,E,iFAaE,IAAD,OAClBW,MAAM,mBACHC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAA5D,GACF,IAAI+D,EAAW/D,EAAKgE,QAAQ,SAACC,EAAMC,GAGjC,OAFAA,EAAI,OAAa,OAAOA,EAAK9E,KAAO,OACpC6E,EAAKC,EAAK9E,MAAM8E,EACTD,IACN,IACH,OAAO,EAAKE,SAAS,CAACnE,KAAM+D,S,6CAIbzC,EAAKlC,GAAO,IAAD,EAI5BN,KAAK4E,MAAM1D,KADVoE,GAH2B,EAE7BhF,GAF6B,eAE7BA,GAF6B,WAKhCN,KAAKqF,SAAS,CACZnE,KAAMoE,EACN9D,aAAc,S,yCAIClB,GACjB,IAAIkB,EAAelB,EAAKN,KAAK4E,MAAM1D,KAAKZ,GAAM,KAC9CN,KAAKqF,SAAS,CAAE7D,aAAcA,M,sCAIhBgB,EAAK+C,GACnB,GAAGA,EAAM,CACP,IAAI5E,EAAQ0C,SAASS,eAAe,kBAAkBzC,MAClDT,EAAUyC,SAASS,eAAe,iBAAiBzC,MACnDf,EAAQ+C,SAASS,eAAe,gBAAgBzC,MAGhDmE,EAAYnC,SAASoC,cAAc,UAEnCpF,EAAO,CAACM,QAAOC,SAAQN,OAAMoF,MAJtB,EAI4BC,SAHxB,GAGkCjF,OADpC8E,EAAUA,EAAU/E,IAAI,IAErCT,KAAKqF,SAAS,CAAEnE,KAAK,2BAAGZ,EAAOD,GAAQL,KAAK4E,MAAM1D,QAEpDlB,KAAKqF,SAAS,CAAEnB,cAAelE,KAAK4E,MAAMV,iB,+BAK1C,OACE,yBAAKnE,UAAU,kBACb,yBAAKA,UAAU,oBACb,qDACA,2EAEF,kBAACgB,EAAD,CAAUG,KAAMlB,KAAK4E,MAAM1D,KAAMhB,mBAAoBF,KAAKE,qBACxDF,KAAK4E,MAAMpD,cACX,kBAACF,EAAD,CAAiBE,aAAcxB,KAAK4E,MAAMpD,aAAeE,uBAAwB1B,KAAK0B,yBAEvF1B,KAAK4E,MAAMV,cAAc,kBAAC3B,EAAD,CAAc2B,aAAclE,KAAK4E,MAAMV,aAAcC,gBAAiBnE,KAAKmE,kBACrG,4BAAQhE,KAAK,SAASJ,UAAU,kBAAkBK,QAASJ,KAAKmE,iBAC9D,yC,GAzEQtD,IAAMC,WAkFxB8E,IAASC,OACP,kBAACnB,EAAD,MACArB,SAASS,eAAe,U","file":"static/js/main.79e7883e.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\n\nclass Card extends React.Component {\n  render() {\n    return (\n      <div className=\"card shadow\">\n        {\n          this.props.handleDeleteButton && (\n          <div className=\"float-right\">\n            <button type=\"button\" className=\"close\" onClick={() => this.props.handleDeleteButton(this.props.book.isbn)}>\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          )\n        }\n        <div className=\"card-img-div\">\n          <img className=\"card-img-top\" alt=\"\" src={this.props.book.imgURL}></img>\n        </div>\n        <div className=\"card-body\">\n          <h4 className=\"card-title\">{this.props.book.title}</h4>\n          <p className=\"card-text\">{this.props.book.author}</p>\n          <p className=\"card-text\">ISBN: {this.props.book.isbn}</p>\n        </div>\n      </div>\n    )\n  }\n};\n\n\nclass CardDeck extends React.Component {\n\n  render() {\n    return (\n      <div className=\"card-deck\">\n        { Object.entries(this.props.data).map( ([key, value]) => \n        <Card key={key} book={value} handleDeleteButton={this.props.handleDeleteButton}/>\n        )}\n        \n      </div>\n    );\n  }\n\n}\n\n\nclass DeleteBookModal extends React.Component {\n\n  render() {\n    return (\n      <Modal show={this.props.selectedBook!=null} onHide={this.props.handleDeleteModalClick}>\n        <Modal.Header closeButton>\n          <Modal.Title>Remove from collection?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Card book={this.props.selectedBook}/>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.handleDeleteModalClick}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={e => this.props.handleDeleteModalClick(e, this.props.selectedBook.isbn)}>\n            Remove\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nclass FormRow extends React.Component {\n  render () {\n    return (\n      <div className=\"form-group row\">\n        <label htmlFor={this.props.id}  className=\"col-sm-2 col-form-label\">{this.props.label} </label>\n        <div className=\"col-sm-10\">\n          <input type=\"text\" className=\"form-control\" id={this.props.id} placeholder={this.props.label}></input>\n        </div>\n      </div>      \n    );\n  }\n}\n\nclass AddBookModal extends React.Component {\n  handleFileSelect(evt) {\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    var files = evt.dataTransfer.files;\n// eslint-disable-next-line\n    for (let i = 0, f; f = files[i]; i++) {\n        if (!f.type.match('image.*')) {\n            continue;\n        }\n        var reader = new FileReader();\n        reader.onload = (function (theFile) {\n            return function (e) {\n                var span = document.createElement('span');\n                span.innerHTML = ['<img class=\"thumb\" src=\"', e.target.result,\n                    '\" title=\"', escape(theFile.name), '\"/>'].join('');\n                let dropZone = document.getElementById('drop-zone');\n                dropZone.innerHTML = \"\";\n                dropZone.insertBefore(span, null);\n            };\n        })(f);\n        reader.readAsDataURL(f);\n    }\n  }\n\n  handleDragOver(evt) {\n    evt.stopPropagation();\n    evt.preventDefault();\n    evt.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.\n  }\n\n  render() {\n    return (\n      <Modal show={this.props.showAddModal} onHide={this.props.handleAddButton}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add new book</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <form id=\"book-form\" action=\"\" method=\"POST\">\n              <FormRow id={'formBookTitle'} label='Title'/>\n              <FormRow id={'formBookAuthor'} label='Author'/>\n              <FormRow id={'formBookIsbn'} label='ISBN'/>\n              <div id=\"drop-zone\" onDragOver={this.handleDragOver} onDrop={this.handleFileSelect}>Drop book image here</div>\n            </form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.handleAddButton}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={e => this.props.handleAddButton(e,'add')}>\n            Add Book\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDeleteButton = this.handleDeleteButton.bind(this);\n    this.handleDeleteModalClick = this.handleDeleteModalClick.bind(this);\n    this.handleAddButton = this.handleAddButton.bind(this);\n    this.state = {\n        data: [],  \n        selectedBook: null,\n        showAddModal: false, \n    };\n    \n  }\n\n  componentDidMount() {\n    fetch('./bookinfo.json')\n      .then(resp => resp.json())\n      .then(data => {\n          let dataDict = data.reduce( (dict, item) => {\n            item['imgURL'] = \"img/\"+item.isbn + \".jpg\"\n            dict[item.isbn]=item;\n            return dict;\n          }, {});\n          return this.setState({data: dataDict});\n        });\n  }\n\n  handleDeleteModalClick(evt, isbn) {\n    const {\n      [isbn]: book,\n      ...otherBooks\n    } = this.state.data;\n    this.setState({\n      data: otherBooks,\n      selectedBook: null,\n    });\n  }\n\n  handleDeleteButton(isbn) {\n    let selectedBook = isbn?this.state.data[isbn]:null;\n    this.setState({ selectedBook: selectedBook});\n  }\n\n\n  handleAddButton(evt, mode) {\n    if(mode) {\n      let title = document.getElementById('formBookAuthor').value;\n      let author =  document.getElementById('formBookTitle').value;\n      let isbn =  document.getElementById('formBookIsbn').value;\n      let read = false;\n      let numPages = '';\n      let thumbnail = document.querySelector(\".thumb\");\n      let imgURL = thumbnail?thumbnail.src:'';\n      let book = {title, author, isbn, read, numPages, imgURL};\n      this.setState({ data: {[isbn]: book,...this.state.data} });\n    }\n    this.setState({ showAddModal: !this.state.showAddModal});\n  }\n\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        <div className=\"header-container\">\n          <h2>My Library Collection</h2>\n          <p>The New York Times Bestsellers October 2019</p>\n        </div>\n        <CardDeck data={this.state.data} handleDeleteButton={this.handleDeleteButton} />\n        { this.state.selectedBook &&\n          <DeleteBookModal selectedBook={this.state.selectedBook}  handleDeleteModalClick={this.handleDeleteModalClick}/>\n        }\n        {this.state.showAddModal&&<AddBookModal showAddModal={this.state.showAddModal} handleAddButton={this.handleAddButton}/>}\n        <button type=\"button\" className=\"fab btn-primary\" onClick={this.handleAddButton}>\n          <span>&#x2b;</span>\n        </button>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}